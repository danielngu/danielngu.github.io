<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="/log/feed.xml" rel="self" type="application/atom+xml" /><link href="/log/" rel="alternate" type="text/html" /><updated>2024-09-25T19:55:15+12:00</updated><id>/log/feed.xml</id><title type="html">Daniel Ngu’s Log</title><entry><title type="html">Mar</title><link href="/log/2024/03/01/Mar.html" rel="alternate" type="text/html" title="Mar" /><published>2024-03-01T13:00:00+13:00</published><updated>2024-03-01T13:00:00+13:00</updated><id>/log/2024/03/01/Mar</id><content type="html" xml:base="/log/2024/03/01/Mar.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#arch-1">Arch Linux</a></li>
  <li><a href="#debian-1">Debian</a></li>
  <li><a href="#raspberry-1">Raspberry Pi</a></li>
</ol>

<h3 id="sun-mar-03-2024">Sun, Mar 03, 2024</h3>

<h3 id="arch-linux"><a name="arch-1"></a>ARCH LINUX</h3>

<h4 id="keyboard">Keyboard</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>loadkeys us
</code></pre></div></div>

<h4 id="partition">Partition</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># List block devices</span>
<span class="nv">$ </span>lsblk

<span class="c"># To partition /dev/nvme0n1</span>
<span class="nv">$ </span>gdisk /dev/nvme0n1

<span class="c"># Either new or start over</span>
<span class="nv">$ </span>o

<span class="c"># Accept</span>
<span class="nv">$ </span>y

<span class="c"># Create new partition</span>
<span class="nv">$ </span>n

<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter

<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>Enter

<span class="c"># Allocated 512MB for boot partition</span>
<span class="nv">$ </span>+512M

<span class="c"># Set type of partition or L to list</span>
<span class="nv">$ </span>EF00

<span class="c"># Create new partition</span>
<span class="nv">$ </span>n

<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter

<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>Enter

<span class="c"># Accept default last sector</span>
<span class="nv">$ </span>Enter

<span class="c"># Set partition type to LVM</span>
<span class="nv">$ </span>8300

<span class="c"># Write change</span>
<span class="nv">$ </span>w

<span class="c"># Accept</span>
<span class="nv">$ </span>y

<span class="c"># Create encrypted container</span>
<span class="nv">$ </span>cryptsetup luksFormat <span class="nt">--type</span> luks2 /dev/nvme0n1p2

<span class="c"># Open container</span>
<span class="nv">$ </span>cryptsetup open /dev/nvme0n1p2 cryptolvm

<span class="c"># Create physical volume</span>
<span class="nv">$ </span>pvcreate /dev/mapper/cryptolvm

<span class="c"># Create MyVol volume group</span>
<span class="nv">$ </span>vgcreate MyVol /dev/mapper/cryptolvm

<span class="c"># Allocated 2GB for swap</span>
<span class="nv">$ </span>lvcreate <span class="nt">-L</span> 2G MyVol <span class="nt">-n</span> swap

<span class="c"># Allocated remaining for root</span>
<span class="nv">$ </span>lvcreate <span class="nt">-l</span> 100%FREE MyVol <span class="nt">-n</span> root

<span class="c"># Format swap</span>
<span class="nv">$ </span>mkswap /dev/mapper/MyVol-swap

<span class="c"># Format root</span>
<span class="nv">$ </span>mkfs.ext4 /dev/mapper/MyVol-root

<span class="c"># Mount swap</span>
<span class="nv">$ </span>swapon /dev/mapper/MyVol-swap

<span class="c"># Mount root</span>
<span class="nv">$ </span>mount /dev/mapper/MyVol-root /mnt

<span class="c"># Format boot</span>
<span class="nv">$ </span>mkfs.vfat <span class="nt">-F32</span> /dev/nvme0n1p1

<span class="c"># Create boot directory</span>
<span class="nv">$ </span><span class="nb">mkdir</span>	/mnt/boot

<span class="c"># Mount boot</span>
<span class="nv">$ </span>mount /dev/nvme0n1p1 /mnt/boot
</code></pre></div></div>

<h4 id="dual-boot-option">Dual Boot Option</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Mac's EFI partition; shared with Linux</span>
sda1 EFI /boot
sad2 Mac

<span class="c"># Left blank</span>
sda3 EFI
sda4 LUKS
|-MyVol
  |- MyVol-swap <span class="o">[</span>SWAP]
  |- MyVol-root /
</code></pre></div></div>

<h4 id="wireless">Wireless</h4>

<p>Use Ethernet or with Ethernet, install <em>netctl</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacman <span class="nt">-S</span> netctl
<span class="nv">$ </span>wifi-menu
</code></pre></div></div>

<h4 id="install-base-system">Install Base System</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacstrap /mnt base base-devel
</code></pre></div></div>

<p>Edit <em>/etc/pacman.d/mirrorlist</em> so that the preferred mirror is on top of the list</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacstrap /mnt base base-devel linux linux-firmware mkinitcpio lvm2 netctl dhcpcd
</code></pre></div></div>

<h4 id="configure-system">Configure System</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Generate fstab</span>
<span class="nv">$ </span>genfstab <span class="nt">-pU</span> /mnt <span class="o">&gt;&gt;</span> /mnt/etc/fstab
</code></pre></div></div>

<p>Edit <em>/mnt/etc/fstab</em>; change <em>relatime</em> to <em>noatime</em> for non-boot partitions</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># chroot</span>
<span class="nv">$ </span>arch-chroot /mnt
</code></pre></div></div>

<p>Add hostname to <em>/etc/hostname</em> and <em>/etc/hosts</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	localhost
<span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	<span class="nb">hostname</span><span class="p">.</span>subdomain<span class="p">.</span>domain	<span class="nb">hostname</span>
</code></pre></div></div>

<p>Set time zone</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> /usr/share/zoneinfo/Pacific/Auckland /etc/localtime
</code></pre></div></div>

<p>Uncomment locale in <em>/etc/locale.gen</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>locale-gen
</code></pre></div></div>

<p>Set locale preference by adding <em>LANG=”en_NZ.UTF-8”</em> to <em>/etc/locale.conf</em></p>

<h4 id="configure-mkinitcpio">Configure mkinitcpio</h4>

<p>Add <em>ext4</em> to MODULES and <em>encrypt lvm2 resume</em> hooks to <em>/etc/mkinitcpio.conf</em> before <em>filesystems</em> and after <em>udev</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HOOKS<span class="p">=(</span>base udev autodetect modconf block encrypt lvm2 resume filesystems keyboard fsck<span class="p">)</span>
</code></pre></div></div>

<p>mkinitcpio and set root password</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mkinitcpio <span class="nt">-p</span> linux
<span class="nv">$ </span>passwd
</code></pre></div></div>

<h4 id="install-boot-loader">Install Boot Loader</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bootctl <span class="nt">--path</span><span class="o">=</span>/boot <span class="nb">install</span>
</code></pre></div></div>

<p>Edit <em>/boot/loader/loader.conf</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>default lts<span class="p">.</span><span class="k">conf</span>
<span class="nb">timeout</span> <span class="m">5</span>
editor <span class="m">0</span>
</code></pre></div></div>

<p>Use <em>blkid</em> to find the UUID for <em>/dev/nvme0n1p2</em> and replace the <code class="language-plaintext highlighter-rouge">&lt;UUID&gt;</code> below without the bracket</p>

<p>Edit <em>/boot/loader/entries/arch.conf</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">title</span> Arch Linux
linux /vmlinuz<span class="p">-</span>linux
initrd /initramfs<span class="p">-</span>linux<span class="p">.</span>img
<span class="k">options</span> cryptdevice<span class="p">=</span>UUID<span class="p">=&lt;</span>UUID<span class="p">&gt;:</span>MyVol root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root resume=/</span>dev<span class="sr">/mapper/</span>MyVol<span class="p">-</span>swap rw
</code></pre></div></div>

<p>Edit <em>/boot/loader/entries/lts.conf</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">title</span> LTS
linux /vmlinuz<span class="p">-</span>linux<span class="p">-</span>lts
initrd /initramfs<span class="p">-</span>linux<span class="p">-</span>lts<span class="p">.</span>img
<span class="k">options</span> cryptdevice<span class="p">=</span>UUID<span class="p">=&lt;</span>UUID<span class="p">&gt;:</span>MyVol root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root resume=/</span>dev<span class="sr">/mapper/</span>MyVol<span class="p">-</span>swap rw
</code></pre></div></div>

<h4 id="wireless-1">Wireless</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacman <span class="nt">-S</span> dialog wpa_supplicant
</code></pre></div></div>

<h4 id="umount-and-reboot">Umount and Reboot</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Exit from chroot environment</span>
<span class="nv">$ </span><span class="nb">exit</span>

<span class="nv">$ </span>umount <span class="nt">-R</span> /mnt
<span class="nv">$ </span>reboot
</code></pre></div></div>

<h4 id="create-new-user">Create New User</h4>

<p>Creates a new user with home directory, change password and add user to additional groups</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>useradd <span class="nt">-m</span> <span class="nt">-G</span> wheel <span class="nt">-s</span> /bin/bash daniel
<span class="nv">$ </span>passwd daniel
<span class="nv">$ </span>usermod <span class="nt">-a</span> <span class="nt">-G</span> audio,network,power,scanner,storage,systemd-journal,video daniel
</code></pre></div></div>

<h4 id="wireless-2">Wireless</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wifi-menu

<span class="c"># Find the wifi profile</span>
<span class="nv">$ </span><span class="nb">ls</span> /etc/netctl/

<span class="c"># profile-name as obtained above</span>
<span class="nv">$ </span>netctl <span class="nb">enable </span>profile-name
</code></pre></div></div>

<p>A better approach is as follows rather than enabling profile</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Wired</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> ifplugd

<span class="c"># substitute interface with the value obtained from ip a</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>netctl-ifplugd@interface.service

<span class="c"># substitute interface with the value obtained from ip a</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>netctl-auto@interface.service
</code></pre></div></div>

<h4 id="sudo">Sudo</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacman <span class="nt">-S</span> <span class="nb">sudo</span>
</code></pre></div></div>

<p>Run visudo, edit it to restrict sudo to specific group or user</p>

<h4 id="additional-install--extra-configuration">Additional Install / Extra Configuration</h4>

<h4 id="yay">Yay</h4>

<p>Install <em>yay</em> from AUR</p>

<p><a href="https://aur.archlinux.org/cgit/aur.git/snapshot/yay.tar.gz">Download</a></p>

<p>Extract; run <em>makepkg -s</em> followed by <em>pacman -U</em> against the generated <em>pkg.tar.xz</em> package to install it</p>

<h4 id="audio">Audio</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> alsa-utils

<span class="c"># ALSA comes muted by default</span>
<span class="nv">$ </span>amixer sset Master unmute
</code></pre></div></div>

<p>Create <em>/etc/modprobe.d/disablePower.conf</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">options</span> snd_hda_intel power_save<span class="p">=</span><span class="m">0</span>
</code></pre></div></div>

<h4 id="mesa">Mesa</h4>

<p>Edit <em>/etc/enviroment</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MESA_LOADER_DRIVER_OVERRIDE<span class="p">=</span>i965
</code></pre></div></div>

<h4 id="restore">Restore</h4>

<p>Restore home from GFS backup; SYS backup is available for configuration reference if needed but do not restore straight from it since that will wipe newer configurations for fresh build</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Install all packages from backup list</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> - &lt; pkglist.txt
</code></pre></div></div>

<p>Do the same for AUR packages with <em>yay</em></p>

<h4 id="bluetooth">Bluetooth</h4>

<p>Edit <em>/etc/bluetooth/main.conf</em> and add the following line</p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>AutoEnable<span class="p">=</span>true
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>bluetooth.service
</code></pre></div></div>

<p>Enable bluetooth service then pair devices</p>

<h4 id="cups">CUPS</h4>

<p>Install, enable and start CUPS</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> cups
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>org.cups.cupsd.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl start org.cups.cupsd.service
</code></pre></div></div>

<p>Run <em>sudo usermod -a -G lp daniel</em> to add to lp group
Run <em>sudo usermod -a -G cups daniel</em> to add to <em>cups</em> group</p>

<p>Append <em>wheel</em> to <em>SystemGroup sys root</em> in <em>/etc/cups/cups-files.conf</em></p>

<p>At this point, re-logon for the permission to be effective</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yay <span class="nt">-S</span> brother-mfc-l2713dw
<span class="nv">$ </span>yay <span class="nt">-S</span> brscan4
</code></pre></div></div>

<p>Install printer and scanner drivers</p>

<p>Browse to <em>http://localhost:631</em>, go to <em>Administration -&gt; Add Printer</em>
Select <em>LPD/LPR Host or Printer</em>
Enter <em>lpd://(Your printer’s IP address)/binary_p1</em>
Select <em>Brother</em>
Select the CUPS printer driver version (if not already automatically selected)
Name the printer</p>

<p>Then go to <em>Printers</em>
Select the printer
Drop down <em>Administration</em>
Select <em>Set Default Options</em>
Set to the following
<em>A4</em>
<em>Plain Paper</em>
<em>600dpi</em>
<em>Tray1</em>
<em>DuplexNoTumble</em>
<em>Toner Save to Off</em></p>

<p>Drop down <em>Administration</em>
Select <em>Set As Server Default</em></p>

<p>For scanning</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>brsaneconfig4 <span class="nt">-a</span> <span class="nv">name</span><span class="o">=(</span>name your device<span class="o">)</span> <span class="nv">model</span><span class="o">=(</span>model name<span class="o">)</span> <span class="nv">ip</span><span class="o">=</span>xx.xx.xx.xx
</code></pre></div></div>

<p>Use gscan2pdf</p>

<p>Untick <em>OCR scanned pages</em>
Select <em>All</em> pages
Leave <em>Mode</em> as default
Change <em>Geometry</em> from <em>Manual</em> to <em>A4</em></p>

<p>gscan2pdf will need <em>yay -S pdftk-bin</em></p>

<p>Even though <em>org.cups.cupsd.service</em> has been enabled, it won’t auto start on boot
Just do a test print, that will activate the auto start on boot</p>

<h4 id="ntp">NTP</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>ntpd.service
</code></pre></div></div>

<h4 id="power-management">Power Management</h4>

<p><a href="https://wiki.archlinux.org/title/CPU_frequency_scaling#power-profiles-daemon">power-profile-daemon</a> simplifies power management</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacman <span class="nt">-S</span> thermald power-profiles-daemon upower
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>power-profiles-daemon.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>upower.service
</code></pre></div></div>

<h4 id="nvidia">Nvidia</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pacman <span class="nt">-S</span> nvidia nvidia-lts nvidia-utils nvidia-settings nvidia-prime mesa-utils virtualgl
</code></pre></div></div>

<p>Use nvidia-smi to check offloading and wattage
Use prime-run if need to explicitly use nvidia
Some programs will do that automatically such as mpv
Otherwise, they default to the integrated GPU
For Intel, that’s i915</p>

<h4 id="slock">Slock</h4>

<p><a href="https://wiki.archlinux.org/title/Slock#Lock_on_suspend">Lock on suspend</a></p>

<p>Create <em>/etc/systemd/system/slock@.service</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span>Unit<span class="p">]</span>
Description<span class="p">=</span>Lock X session using slock <span class="k">for</span> user %<span class="k">i</span>
Before<span class="p">=</span><span class="k">sleep</span><span class="p">.</span>target

<span class="p">[</span>Service<span class="p">]</span>
<span class="nb">User</span><span class="p">=</span>%<span class="k">i</span>
Environment<span class="p">=</span>DISPLAY<span class="p">=:</span><span class="m">0</span>
ExecStartPre<span class="p">=</span><span class="sr">/usr/</span><span class="nb">bin</span>/xset dpms force <span class="k">suspend</span>
ExecStart<span class="p">=</span><span class="sr">/usr/</span>local<span class="sr">/bin/</span>slock

<span class="p">[</span>Install<span class="p">]</span>
WantedBy<span class="p">=</span><span class="k">sleep</span><span class="p">.</span>target
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>slock@user.service
</code></pre></div></div>

<p>Substitute user with value from <em>echo $USER</em></p>

<h4 id="macbook-air-mid-2013">Macbook Air Mid-2013</h4>

<p>It has BCM4360 wireless network adapter</p>

<p>For Arch LInux, install <em>broadcom-wl-dkms</em> and <em>linux-headers</em>
Then reboot before trying wifi-menu</p>

<p>For Debian, follow installation instruction for <a href="https://wiki.debian.org/wl">wl</a></p>

<h4 id="deprecated">Deprecated</h4>

<p>Section kept for reference only</p>

<h4 id="pulseaudio-replaced-by-pipewire">PulseAudio (Replaced by PipeWire)</h4>

<p>Edit <em>/etc/pulse/system.pa</em> and add the following lines</p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>load<span class="p">-</span>module module<span class="p">-</span>bluetooth<span class="p">-</span>policy
load<span class="p">-</span>module module<span class="p">-</span>bluetooth<span class="p">-</span>discover
</code></pre></div></div>

<p>Edit <em>/etc/pulse/default.pa</em> and add the following line</p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>load<span class="p">-</span>module module<span class="p">-</span>switch<span class="p">-</span><span class="k">on</span><span class="p">-</span>connect
</code></pre></div></div>

<p>If cookie not found then <em>cp ~/.pulse-cookie ~/.config/pulse/cookie</em></p>

<h4 id="ios">iOS</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>usbmuxd <span class="nt">-f</span> <span class="nt">-v</span>
<span class="nv">$ </span>idevice_id <span class="nt">-l</span>
<span class="nv">$ </span>ideviceinfo
<span class="nv">$ </span>ideviceinstaller <span class="nt">-l</span>
<span class="nv">$ </span>ifuse ~/iPhone
<span class="nv">$ </span>umount ~/iPhone
</code></pre></div></div>

<h4 id="reference">Reference</h4>

<p><a href="https://wiki.archlinux.org/index.php/Broadcom_wireless">Broadcom wireless</a>
<a href="https://wiki.archlinux.org/index.php/Mac#Mid_2013_13%22_-_Version_6,2">Mid 2013</a>
<a href="https://wiki.archlinux.org/index.php/Mac#Suspend_and_Hibernate">Suspend</a>
<a href="https://wiki.archlinux.org/index.php/Mac#WiFi">WiFi</a>
<a href="https://wiki.archlinux.org/index.php/netctl#Enabling_a_profile">netctl: Enabling a profile</a>
<a href="https://wiki.archlinux.org/index.php/netctl#Special_systemd_units">netctl: Special systemd units: wired / wireless</a></p>

<p><br /></p>
<h3 id="debian"><a name="debian-1"></a>DEBIAN</h3>

<h4 id="network-setup">Network Setup</h4>

<p>Edit <em>/etc/network/interfaces</em></p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">source</span> <span class="sr">/etc/</span>network<span class="sr">/interfaces.d/</span>*

# The loopback network interface
auto <span class="k">lo</span>
iface <span class="k">lo</span> inet loopback

# The primary network interface
auto wlan0
iface wlan0 inet static
# iface wlan0 inet dhcp
# Omit the following <span class="m">5</span> <span class="nb">lines</span> <span class="k">if</span> using dhcp; <span class="nb">or</span> <span class="m">7</span> <span class="nb">lines</span> <span class="k">if</span> using eno1
        address <span class="p">&lt;</span>address<span class="p">&gt;</span>
        netmask <span class="p">&lt;</span>netmask<span class="p">&gt;</span>
        network <span class="p">&lt;</span>network<span class="p">&gt;</span>
        broadcast <span class="p">&lt;</span>broadcast<span class="p">&gt;</span>
        gateway <span class="p">&lt;</span>gateway<span class="p">&gt;</span>
        wpa<span class="p">-</span>ssid <span class="p">&lt;</span>wpa<span class="p">-</span>ssid<span class="p">&gt;</span>
        wpa<span class="p">-</span>psk <span class="p">&lt;</span>wpa<span class="p">-</span>psk<span class="p">&gt;</span>
</code></pre></div></div>

<p>To get <em>wpa-psk</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wpa_passphrase Your-WiFi-Name-SSID &lt;passphrase&gt;
</code></pre></div></div>

<p><br /></p>
<h3 id="raspberry-pi"><a name="raspberry-1"></a>RASPBERRY PI</h3>

<h4 id="backup">Backup</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Backup</span>
<span class="nv">$ </span><span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="k">if</span><span class="o">=</span>/dev/sde <span class="nv">of</span><span class="o">=</span>raspbian.img
<span class="c"># Or with compression</span>
<span class="nv">$ </span><span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="k">if</span><span class="o">=</span>/dev/sde | <span class="nb">gzip</span> <span class="o">&gt;</span> rasbian.img.gz

<span class="c"># Restore</span>
<span class="nv">$ </span><span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="k">if</span><span class="o">=</span>raspbian.img <span class="nv">of</span><span class="o">=</span>/dev/sde
<span class="c"># Or with compression</span>
<span class="nv">$ </span><span class="nb">gunzip</span> <span class="nt">--stdout</span> rasbian.img.gz | <span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="nv">of</span><span class="o">=</span>/dev/sde
</code></pre></div></div>

<h4 id="consistency-check">Consistency Check</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>lsblk
<span class="nv">$ </span><span class="nb">sudo </span>fdisk <span class="nt">-l</span>
<span class="nv">$ </span><span class="nb">sudo </span>fsck <span class="nt">-a</span> /dev/sde2
<span class="nv">$ </span><span class="nb">sudo </span>dosfsck <span class="nt">-a</span> /dev/sde1
</code></pre></div></div>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Dec</title><link href="/log/2021/12/01/Dec.html" rel="alternate" type="text/html" title="Dec" /><published>2021-12-01T13:00:00+13:00</published><updated>2021-12-01T13:00:00+13:00</updated><id>/log/2021/12/01/Dec</id><content type="html" xml:base="/log/2021/12/01/Dec.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#arch-1">Arch Installation / Encrypted Setup / systemd-boot</a></li>
</ol>

<h3 id="mon-dec-20-2021">Mon, Dec 20, 2021</h3>

<h3 id="arch-installation--encrypted-setup--systemd-boot"><a name="arch-1"></a>ARCH INSTALLATION / ENCRYPTED SETUP / systemd-boot</h3>

<p>This is <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS">LVM on LUKS</a> setup based on Arch’s wiki documentation.</p>

<h4 id="keyboard">Keyboard</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>loadkeys us</code></pre></figure>

<h4 id="partition">Partition</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>lsblk				<span class="c"># List block devices</span>
<span class="nv">$ </span>gdisk /dev/nvme0n1		<span class="c"># To partition /dev/nvme0n1</span>
<span class="nv">$ </span>o				<span class="c"># Either new or start over</span>
<span class="nv">$ </span>y				<span class="c"># Accept</span>
<span class="nv">$ </span>n				<span class="c"># Create new partition</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>+512M				<span class="c"># Allocated 512MB for boot partition</span>
<span class="nv">$ </span>EF00				<span class="c"># Set type of partition or L to list</span>
<span class="nv">$ </span>n				<span class="c"># Create new partition</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default last sector</span>
<span class="nv">$ </span>8300				<span class="c"># Set partition type to LVM</span>
<span class="nv">$ </span>w				<span class="c"># Write change</span>
<span class="nv">$ </span>y				<span class="c"># Accept</span>
<span class="nv">$ </span>cryptsetup luksFormat <span class="nt">--type</span> luks2 /dev/nvme0n1p2	<span class="c"># Create encrypted container</span>
<span class="nv">$ </span>cryptsetup open /dev/nvme0n1p2 cryptolvm			<span class="c"># Open container</span>
<span class="nv">$ </span>pvcreate /dev/mapper/cryptolvm			<span class="c"># Create physical volume</span>
<span class="nv">$ </span>vgcreate MyVol /dev/mapper/cryptolvm			<span class="c"># Create MyVol volume group</span>
<span class="nv">$ </span>lvcreate <span class="nt">-L</span> 2G MyVol <span class="nt">-n</span> swap				<span class="c"># Allocated 2GB for swap</span>
<span class="nv">$ </span>lvcreate <span class="nt">-l</span> 100%FREE MyVol <span class="nt">-n</span> root			<span class="c"># Allocated remaining for root</span>
<span class="nv">$ </span>mkswap /dev/mapper/MyVol-swap				<span class="c"># Format swap</span>
<span class="nv">$ </span>mkfs.ext4 /dev/mapper/MyVol-root			<span class="c"># Format root</span>
<span class="nv">$ </span>swapon /dev/mapper/MyVol-swap				<span class="c"># Mount swap</span>
<span class="nv">$ </span>mount /dev/mapper/MyVol-root /mnt			<span class="c"># Mount root</span>
<span class="nv">$ </span>mkfs.vfat <span class="nt">-F32</span> /dev/nvme0n1p1				<span class="c"># Format boot</span>
<span class="nv">$ </span><span class="nb">mkdir</span>	/mnt/boot					<span class="c"># Create boot directory</span>
<span class="nv">$ </span>mount /dev/nvme0n1p1 /mnt/boot			<span class="c"># Mount boot</span></code></pre></figure>

<p><a href="#2021-12-20">2021-12-20</a> <a href="#2021-12-20_1">[1]</a></p>

<h4 id="wireless">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>wifi-menu</code></pre></figure>

<p><a href="#2021-12-20">2021-12-20</a> <a href="#2021-12-20_2">[2]</a></p>

<h4 id="install-base-system">Install Base System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacstrap /mnt base base-devel</code></pre></figure>

<p><a href="#2021-12-20">2021-12-20</a> <a href="#2021-12-20_3">[3]</a></p>

<h4 id="configure-system">Configure System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>genfstab <span class="nt">-pU</span> /mnt <span class="o">&gt;&gt;</span> /mnt/etc/fstab	<span class="c"># Generate fstab</span></code></pre></figure>

<p>Edit <em>/mnt/etc/fstab</em> and change <em>relatime</em> to <em>noatime</em> for non-boot partitions.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>arch-chroot /mnt			<span class="c"># chroot</span></code></pre></figure>

<p>Add hostname to <em>/etc/hostname</em> and <em>/etc/hosts</em></p>

<p><em>/etc/hosts</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	localhost
<span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	<span class="nb">hostname</span><span class="p">.</span>subdomain<span class="p">.</span>domain	<span class="nb">hostname</span></code></pre></figure>

<p>Set time zone:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> /usr/share/zoneinfo/Pacific/Auckland /etc/localtime</code></pre></figure>

<p>Uncomment the locale in <em>/etc/locale.gen</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>locale-gen				<span class="c"># Generate locale </span></code></pre></figure>

<p>Set locale preference by adding <em>LANG=”en_NZ.UTF-8”</em> to <em>/etc/locale.conf</em></p>

<h4 id="configure-mkinitcpio">Configure mkinitcpio</h4>

<p>Add <em>ext4</em> to MODULES</p>

<p>Add <em>encrypt lvm2 resume</em> hooks to <em>/etc/mkinitcpio.conf</em> before <em>filesystems</em>
and after <em>udev</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">HOOKS<span class="p">=(</span>base udev autodetect modconf block encrypt lvm2 resume filesystems keyboard fsck<span class="p">)</span></code></pre></figure>

<p>mkinitcpio and set root password:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mkinitcpio <span class="nt">-p</span> linux
<span class="nv">$ </span>passwd</code></pre></figure>

<h4 id="install-boot-loader">Install Boot Loader</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>bootctl <span class="nt">--path</span><span class="o">=</span>/boot <span class="nb">install</span></code></pre></figure>

<p>Edit <em>/boot/loader/loader.conf</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">default lts<span class="p">.</span><span class="k">conf</span>
<span class="nb">timeout</span> <span class="m">5</span>
editor <span class="m">0</span></code></pre></figure>

<p>Use <em>blkid</em> to find the UUID for <em>/dev/nvme0n1p2</em> and replace the &lt;UUID&gt; below
without the bracket.</p>

<p>Edit <em>/boot/loader/entries/arch.conf</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="nb">title</span> Arch Linux
linux /vmlinuz<span class="p">-</span>linux
initrd /initramfs<span class="p">-</span>linux<span class="p">.</span>img
<span class="k">options</span> cryptdevice<span class="p">=</span>UUID<span class="p">=&lt;</span>UUID<span class="p">&gt;:</span>MyVol root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root resume=/</span>dev<span class="sr">/mapper/</span>MyVol<span class="p">-</span>swap rw</code></pre></figure>

<p>Edit <em>/boot/loader/entries/lts.conf</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="nb">title</span> LTS
linux /vmlinuz<span class="p">-</span>linux<span class="p">-</span>lts
initrd /initramfs<span class="p">-</span>linux<span class="p">-</span>lts<span class="p">.</span>img
<span class="k">options</span> cryptdevice<span class="p">=</span>UUID<span class="p">=&lt;</span>UUID<span class="p">&gt;:</span>MyVol root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root resume=/</span>dev<span class="sr">/mapper/</span>MyVol<span class="p">-</span>swap rw</code></pre></figure>

<h4 id="wireless-1">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> dialog wpa_supplicant</code></pre></figure>

<h4 id="umount-and-reboot">Umount and Reboot</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">exit</span>			<span class="c"># Exit from chroot environment</span>
<span class="nv">$ </span>umount <span class="nt">-R</span> /mnt
<span class="nv">$ </span>reboot</code></pre></figure>

<h4 id="create-new-user">Create New User</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>useradd <span class="nt">-m</span> <span class="nt">-G</span> wheel <span class="nt">-s</span> /bin/bash daniel
<span class="nv">$ </span>passwd daniel
<span class="nv">$ </span>usermod <span class="nt">-a</span> <span class="nt">-G</span> audio,network,power,scanner,storage,systemd-journal,video daniel</code></pre></figure>

<p>The above creates a new user with home directory, change password and add user
to additional groups.</p>

<h4 id="wireless-2">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>wifi-menu
<span class="nv">$ </span><span class="nb">ls</span> /etc/netctl/			<span class="c"># Find the wifi profile</span>
<span class="nv">$ </span>netctl <span class="nb">enable </span>profile-name		<span class="c"># profile-name as obtained above</span></code></pre></figure>

<p>Alternatively, a better approach is as follows rather than enabling profile:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> ifplugd					<span class="c"># Wired</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>netctl-ifplugd@interface.service	<span class="c"># substitute interface with the value obtained from ip a</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>netctl-auto@interface.service		<span class="c"># substitute interface with the value obtained from ip a</span></code></pre></figure>

<p>References:</p>
<p />

<p><a href="https://wiki.archlinux.org/index.php/netctl#Enabling_a_profile">netctl: Enabling a profile</a><br />
<a href="https://wiki.archlinux.org/index.php/netctl#Special_systemd_units">netctl: Special systemd units: wired / wireless</a></p>

<h4 id="sudo">Sudo</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> <span class="nb">sudo</span></code></pre></figure>

<p>Run visudo, edit it to restrict sudo to specific group or user.</p>

<h4 id="additional-install">Additional Install</h4>

<p>Install <em>yay</em> from AUR.</p>

<h4 id="audio">Audio</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> alsa-utils
<span class="nv">$ </span>amixer sset Master unmute		<span class="c"># ALSA comes muted by default.</span></code></pre></figure>

<p>Create <em>/etc/modprobe.d/disablePower.conf</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="k">options</span> snd_hda_intel power_save<span class="p">=</span><span class="m">0</span></code></pre></figure>

<h4 id="mesa">Mesa</h4>

<p>Edit <em>/etc/enviroment</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">MESA_LOADER_DRIVER_OVERRIDE<span class="p">=</span>i965</code></pre></figure>

<h4 id="restore">Restore</h4>

<p>Restore home from GFS backup.</p>

<p>SYS backup is available for configuration reference if needed but do not restore
straight from it since that will wipe newer configurations for fresh build.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> - &lt; pkglist.txt	<span class="c"># Install all packages from backup list</span></code></pre></figure>

<p>Do the same for AUR with <em>yay</em>.<br /></p>

<h3 id="extra-configuration">Extra Configuration</h3>

<h4 id="bluetooth">Bluetooth</h4>

<p>Edit <em>/etc/bluetooth/main.conf</em> and add the following line.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">AutoEnable<span class="p">=</span>true</code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>bluetooth.service</code></pre></figure>

<p>Enable bluetooth service then pair devices.</p>

<h4 id="pulseaudio-deprecated-replaced-by-pipewire">PulseAudio (Deprecated, replaced by PipeWire)</h4>

<p><em>Left here for reference</em>.</p>

<p>Edit <em>/etc/pulse/system.pa</em> and add the following lines.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">load<span class="p">-</span>module module<span class="p">-</span>bluetooth<span class="p">-</span>policy
load<span class="p">-</span>module module<span class="p">-</span>bluetooth<span class="p">-</span>discover</code></pre></figure>

<p>Edit <em>/etc/pulse/default.pa</em> and add the following line.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">load<span class="p">-</span>module module<span class="p">-</span>switch<span class="p">-</span><span class="k">on</span><span class="p">-</span>connect</code></pre></figure>

<p>If cookie not found then <em>cp ~/.pulse-cookie ~/.config/pulse/cookie</em></p>

<h4 id="cups">CUPS</h4>

<p>Install, enable and start CUPS</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> cups
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>org.cups.cupsd.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl start org.cups.cupsd.service</code></pre></figure>

<p>Run <em>sudo usermod -a -G lp daniel</em> to add to lp group.<br />
Run <em>sudo usermod -a -G cups daniel</em> to add to <em>cups</em> group.</p>

<p>Append <em>wheel</em> to <em>SystemGroup sys root</em> in <em>/etc/cups/cups-files.conf</em></p>

<p>At this point, re-logon for the permission to be effective.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>yay <span class="nt">-S</span> brother-mfc-l2713dw
<span class="nv">$ </span>yay <span class="nt">-S</span> brscan4</code></pre></figure>

<p>Install printer and scanner drivers.</p>

<p>Browse to <em>http://localhost:631</em>, go to <em>Administration -&gt; Add Printer</em><br />
Select <em>LPD/LPR Host or Printer</em><br />
Enter <em>lpd://(Your printer’s IP address)/binary_p1</em><br />
Select <em>Brother</em><br />
Select the printer driver, which should already be automatically selected. It’s
the CUPS version.<br />
Name the printer.<br /></p>

<p>Then go to <em>Printers</em>, select the printer, drop down <em>Administration</em> and select <em>Set
Default Options</em>, set <em>A4</em>, <em>Plain Paper</em>, <em>600dpi</em>, <em>Tray1</em>, <em>DuplexNoTumble</em>, <em>Toner Save
to Off</em>. And again drop down <em>Administration</em> and select <em>Set As Server Default</em>.</p>

<p>For scanning:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brsaneconfig4 <span class="nt">-a</span> <span class="nv">name</span><span class="o">=(</span>name your device<span class="o">)</span> <span class="nv">model</span><span class="o">=(</span>model name<span class="o">)</span> <span class="nv">ip</span><span class="o">=</span>xx.xx.xx.xx</code></pre></figure>

<p>Use gscan2pdf:</p>

<p>Untick <em>OCR scanned pages</em><br />
Select <em>All</em> pages<br />
Leave <em>Mode</em> as default<br />
Change <em>Geometry</em> from <em>Manual</em> to <em>A4</em><br /></p>

<p>gscan2pdf will need <em>yay -S pdftk-bin</em></p>

<p>Even though <em>org.cups.cupsd.service</em> has been enabled, it won’t auto start on
boot.<br />
Just do a test print, that will activate the auto start on boot.</p>

<h4 id="ntp">NTP</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>ntpd.service</code></pre></figure>

<h3 id="optional">Optional</h3>

<h4 id="ios">iOS</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>usbmuxd <span class="nt">-f</span> <span class="nt">-v</span>
<span class="nv">$ </span>idevice_id <span class="nt">-l</span>
<span class="nv">$ </span>ideviceinfo
<span class="nv">$ </span>ideviceinstaller <span class="nt">-l</span>
<span class="nv">$ </span>ifuse ~/iPhone
<span class="nv">$ </span>umount ~/iPhone</code></pre></figure>

<h3 id="power-management">Power Management</h3>

<h4 id="desktop">Desktop</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> thermald
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service</code></pre></figure>

<h4 id="laptop">Laptop</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>yay <span class="nt">-S</span> powertop thermald cpupower mbpfan-git tlp
<span class="nv">$ </span>powertop <span class="nt">--calibrate</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>powertop.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>cpupower.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>mbpfan.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>tlp.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>tlp-sleep.service</code></pre></figure>

<p><a href="#2021-12-20">2021-12-20</a> <a href="#2021-12-20_4">[4]</a><br />
<a href="#2022-05-31">2022-05-31</a> <a href="#2022-05-31_1">[1]</a><br />
<a href="#2022-06-16">2022-06-16</a> <a href="#2022-06-16_1">[1]</a> <a href="#2022-06-16_2">[2]</a></p>

<p>For BCM4360 wireless network adapter, install <em>broadcom-wl-dkms</em> and
<em>linux-headers</em>. Then reboot before trying wifi-menu.</p>

<p>Suspend works out of the box.</p>

<p>References:</p>
<p />

<p><a href="https://wiki.archlinux.org/index.php/Broadcom_wireless">Broadcom wireless</a><br />
<a href="https://wiki.archlinux.org/index.php/Mac#WiFi">WiFi</a><br />
<a href="https://wiki.archlinux.org/index.php/Mac#Suspend_and_Hibernate">Suspend</a><br />
<a href="https://wiki.archlinux.org/index.php/Mac#Mid_2013_13%22_-_Version_6,2">Mid 2013</a></p>

<h3 id="notes">Notes</h3>

<h4 id="2021-12-20"><a name="2021-12-20"></a>2021-12-20</h4>

<h4 id="1-partition"><a name="2021-12-20_1"></a>[1] Partition</h4>

<p>For dual boot, in my case, tested working with Macbook Air.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sda1 EFI /boot <span class="c"># This is Mac's EFI, sharing it with Linux)</span>
sad2 MAC
sda3 EFI       <span class="c"># Left blank</span>
sda4 LUKS
|-MyVol
  |- MyVol-swap <span class="o">[</span>SWAP]
  |- MyVol-root /</code></pre></figure>

<h4 id="2-wireless"><a name="2021-12-20_2"></a>[2] Wireless</h4>

<p>netctl is no longer included by default.
Use ethernet or install netctl package.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> netctl</code></pre></figure>

<h4 id="3-install-base-system"><a name="2021-12-20_3"></a>[3] Install Base System</h4>

<p>Edit /etc/pacman.d/mirrorlist so that the preferred mirror is on top of the 
list.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacstrap /mnt base base-devel linux linux-firmware mkinitcpio lvm2 netctl <span class="se">\</span>
	dhcpcd</code></pre></figure>

<p>linux, linux-firmware, mkinitcpio lvm2 and netctl are no longer included by
default so have to install them explicitly.</p>

<h4 id="4-laptop"><a name="2021-12-20_4"></a>[4] Laptop</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>yay <span class="nt">-S</span> powertop laptop-mode-tools cpupower thermald mbpfan-git
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> acpi acpid
<span class="nv">$ </span>powertop <span class="nt">--calibrate</span></code></pre></figure>

<p>Edit <em>/etc/systemd/system/powertop.service</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="p">[</span>Unit<span class="p">]</span>
Description<span class="p">=</span>Powertop tunings

<span class="p">[</span>Service<span class="p">]</span>
Type<span class="p">=</span>oneshot
ExecStart<span class="p">=</span><span class="sr">/usr/</span><span class="nb">bin</span>/powertop <span class="p">--</span>auto<span class="p">-</span>tune

<span class="p">[</span>Install<span class="p">]</span>
WantedBy<span class="p">=</span>multi<span class="p">-</span>user<span class="p">.</span>target</code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>powertop.service</code></pre></figure>

<p>Edit <em>/etc/laptop-mode/laptop-mode.conf</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">ENABLE_LAPTOP_MODE_ON_AC<span class="p">=</span><span class="m">1</span>
ENABLE_LAPTOP_MODE_WHEN_LID_CLOSED<span class="p">=</span><span class="m">1</span></code></pre></figure>

<p>Edit <em>/etc/laptop-mode/conf.d/cpufreq.conf</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">CONTROL_CPU_FREQUENCY<span class="p">=</span><span class="m">0</span></code></pre></figure>

<p>Edit <em>/etc/laptop-mode/conf.d/intel_pstate.conf</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">CONTROL_INTEL_PSTATE<span class="p">=</span><span class="m">0</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>laptop-mode.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>acpid.service</code></pre></figure>

<p>Edit <em>/etc/default/cpupower</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">governor<span class="p">=</span><span class="s1">'powersave'</span>
max_freq<span class="p">=</span><span class="s2">"1.3GHz"</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>cpupower.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service</code></pre></figure>

<p>Edit <em>/usr/lib/systemd/system/mbpfan.service</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">ExecStart<span class="p">=</span><span class="sr">/usr/</span>sbin/mbpfan <span class="p">-</span><span class="k">f</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>mbpfan.service
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> broadcom-wl-dkms linux-headers <span class="c"># linux-headers package is not required but installed it anyway</span>
<span class="nv">$ </span><span class="nb">sudo </span>rmmod b43 ssb bcma wl                    <span class="c"># Either this or reboot</span>
<span class="nv">$ </span><span class="nb">sudo </span>modprobe wl</code></pre></figure>

<h4 id="2022-05-31"><a name="2022-05-31"></a>2022-05-31</h4>

<h4 id="1-desktop--laptop"><a name="2022-05-31_1"></a>[1] Desktop / Laptop</h4>

<p><a href="https://wiki.archlinux.org/title/CPU_frequency_scaling#power-profiles-daemon">power-profile-daemon</a>
simplifies power management.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> thermald power-profiles-daemon upower
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>power-profiles-daemon.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>upower.service</code></pre></figure>

<h4 id="2022-06-16"><a name="2022-06-16"></a>2022-06-16</h4>

<h4 id="1-nvidia"><a name="2022-06-16_1"></a>[1] Nvidia</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> nvidia nvidia-lts nvidia-utils nvidia-settings nvidia-prime <span class="se">\</span>
	mesa-utils virtualgl</code></pre></figure>

<p>Use nvidia-smi to check offloading and wattage.<br />
Use prime-run if need to explicitly use nvidia.<br />
Some programs will do that automatically such as mpv.<br />
Otherwise, they default to the integrated GPU.<br />
For Intel, that’s i915.</p>

<h4 id="2-slock"><a name="2022-06-16_2"></a>[2] Slock</h4>

<p><a href="https://wiki.archlinux.org/title/Slock#Lock_on_suspend">Lock on suspend</a></p>

<p>Create <em>/etc/systemd/system/slock@.service</em><br /></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="p">[</span>Unit<span class="p">]</span>
Description<span class="p">=</span>Lock X session using slock <span class="k">for</span> user %<span class="k">i</span>
Before<span class="p">=</span><span class="k">sleep</span><span class="p">.</span>target

<span class="p">[</span>Service<span class="p">]</span>
<span class="nb">User</span><span class="p">=</span>%<span class="k">i</span>
Environment<span class="p">=</span>DISPLAY<span class="p">=:</span><span class="m">0</span>
ExecStartPre<span class="p">=</span><span class="sr">/usr/</span><span class="nb">bin</span>/xset dpms force <span class="k">suspend</span>
ExecStart<span class="p">=</span><span class="sr">/usr/</span>local<span class="sr">/bin/</span>slock

<span class="p">[</span>Install<span class="p">]</span>
WantedBy<span class="p">=</span><span class="k">sleep</span><span class="p">.</span>target</code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>slock@user.service </code></pre></figure>

<p>Substitute user with value from <em>echo $USER</em></p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Sep</title><link href="/log/2021/09/01/Sep.html" rel="alternate" type="text/html" title="Sep" /><published>2021-09-01T12:00:00+12:00</published><updated>2021-09-01T12:00:00+12:00</updated><id>/log/2021/09/01/Sep</id><content type="html" xml:base="/log/2021/09/01/Sep.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#bujo-1">Bullet Journal (with Roam)</a></li>
</ol>

<h3 id="wed-sep-01-2021">Wed, Sep 01, 2021</h3>

<h3 id="bullet-journal-with-roam"><a name="bujo-1"></a>BULLET JOURNAL (WITH ROAM)</h3>

<h4 id="my-method">My Method</h4>

<p><strong>Keys</strong>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>\+		Journaled item
date/time	Timestamped
@		Scheduled item
-&gt;		Migrated
&lt;-		Future Logged
</code></pre></div></div>

<p><strong>Notes</strong>:</p>

<p>If +note, then there’s an entry in my journal.</p>

<p><strong>Tasks</strong>:</p>

<p>If @date/time, then there is an entry in the Calendar.<br />
The three stages of a task:</p>

<ol>
  <li>Opened/Completed</li>
  <li>Migrated/Future Logged</li>
  <li>Crossed out if abandoned.</li>
</ol>

<p>For 2 &amp; 3, the check box will be removed so that it won’t show up as uncompleted
task.</p>

<p>Use Daily Note as a launching point.<br />
[[BuJo: 2021]] to create a page for it.</p>

<ul>
  <li><strong>Future Log</strong> (For entries that will occur outside of current month.)
    <ul>
      <li>January</li>
      <li>February</li>
      <li>March</li>
      <li>April</li>
      <li>May</li>
      <li>June</li>
      <li>July</li>
      <li>August</li>
      <li>September</li>
      <li>October</li>
      <li>November</li>
      <li>December</li>
    </ul>
  </li>
  <li><strong>January</strong>
    <ul>
      <li>Calendar (Refer to Outlook Calendar for time blocking.)</li>
      <li>Monthly Log (For open tasks migrated from last month or last week.)</li>
      <li>Daily Log (Refer to Daily Notes for rapid logging.)</li>
      <li>Media Consumption (Custom Log)</li>
      <li>Shopping List</li>
      <li>Lawn</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="note-taking" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Aug</title><link href="/log/2021/08/01/Aug.html" rel="alternate" type="text/html" title="Aug" /><published>2021-08-01T12:00:00+12:00</published><updated>2021-08-01T12:00:00+12:00</updated><id>/log/2021/08/01/Aug</id><content type="html" xml:base="/log/2021/08/01/Aug.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#zk-1">Zettelkasten</a></li>
</ol>

<h3 id="sat-aug-28-2021">Sat, Aug 28, 2021</h3>

<h3 id="zettelkasten"><a name="zk-1"></a>ZETTELKASTEN</h3>

<h4 id="stages">Stages</h4>

<ol>
  <li>Storage Repository (Evernote)</li>
  <li>Zettelkasten (Roam)</li>
  <li>Synthesising New Ideas</li>
</ol>

<h4 id="steps">Steps</h4>

<p><strong>Storage Repository</strong></p>

<ul>
  <li>Kindle: <strong>Readwise</strong> to <strong>Evernote</strong> (auto)</li>
  <li>Web: Share to <strong>Instapaper</strong> (reading, highlighting &amp; notes) and only share to <strong>Evernote</strong> (storage) if I made any highlights or kept any notes.</li>
</ul>

<p><strong>Zettelkasten</strong></p>

<ul>
  <li>Highlights and Notes (From Storage Repository)</li>
  <li>Reference Notes (Blue)</li>
  <li>Literature Notes (Yellow)</li>
  <li>Permanent Notes (Green)</li>
  <li>Projects/Publications (From Synthesising New Ideas)</li>
</ul>

<p><strong>Zettelkasten Steps In Details</strong></p>

<p>Reference Notes: Highlights and bibliography details.</p>

<p>Template:</p>

<ul>
  <li>Tags: #referencenote</li>
  <li>Source:</li>
  <li>Author:</li>
  <li>Summary:</li>
  <li>Highlights:
    <ul>
      <li></li>
    </ul>
  </li>
</ul>

<p>Literature Notes: Thoughts and Summary.</p>

<p>Template:</p>

<ul>
  <li>Tags: #literaturenote</li>
  <li>Source:</li>
  <li>Notes:
    <ul>
      <li>Thoughts:
        <ul>
          <li></li>
        </ul>
      </li>
      <li>Literature (Summary) Notes:
        <ul>
          <li></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>Permanent Notes: Conclusions/lessons drawn/learnt.</p>

<p>Template:</p>

<ul>
  <li>Tags: #permanentnote</li>
  <li>Related Permanent Notes:</li>
  <li>Sources:</li>
  <li>Notes:
    <ul>
      <li>Thoughts:
        <ul>
          <li></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="note-taking" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Jul</title><link href="/log/2019/07/01/Jul.html" rel="alternate" type="text/html" title="Jul" /><published>2019-07-01T12:00:00+12:00</published><updated>2019-07-01T12:00:00+12:00</updated><id>/log/2019/07/01/Jul</id><content type="html" xml:base="/log/2019/07/01/Jul.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#arch-1">Arch Installation / Encrypted Setup / systemd-boot</a></li>
</ol>

<h3 id="wed-jul-24-2019">Wed, Jul 24, 2019</h3>

<h3 id="arch-installation--encrypted-setup--systemd-boot"><a name="arch-1"></a>ARCH INSTALLATION / ENCRYPTED SETUP / systemd-boot</h3>

<p>This is <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS">LVM on LUKS</a> setup based on Arch’s wiki documentation.</p>

<h4 id="keyboard">Keyboard</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>loadkeys us</code></pre></figure>

<h4 id="partition">Partition</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>lsblk				<span class="c"># List block devices</span>
<span class="nv">$ </span>gdisk /dev/nvme0n1		<span class="c"># To partition /dev/nvme0n1</span>
<span class="nv">$ </span>o				<span class="c"># Either new or start over</span>
<span class="nv">$ </span>y				<span class="c"># Accept</span>
<span class="nv">$ </span>n				<span class="c"># Create new partition</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>+512M				<span class="c"># Allocated 512MB for boot partition</span>
<span class="nv">$ </span>EF00				<span class="c"># Set type of partition or L to list</span>
<span class="nv">$ </span>n				<span class="c"># Create new partition</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default last sector</span>
<span class="nv">$ </span>8300				<span class="c"># Set partition type to LVM</span>
<span class="nv">$ </span>w				<span class="c"># Write change</span>
<span class="nv">$ </span>y				<span class="c"># Accept</span>
<span class="nv">$ </span>cryptsetup luksFormat <span class="nt">--type</span> luks2 /dev/nvme0n1p2	<span class="c"># Create encrypted container</span>
<span class="nv">$ </span>cryptsetup open /dev/nvme0n1p2 cryptolvm			<span class="c"># Open container</span>
<span class="nv">$ </span>pvcreate /dev/mapper/cryptolvm			<span class="c"># Create physical volume</span>
<span class="nv">$ </span>vgcreate MyVol /dev/mapper/cryptolvm			<span class="c"># Create MyVol volume group</span>
<span class="nv">$ </span>lvcreate <span class="nt">-L</span> 2G MyVol <span class="nt">-n</span> swap				<span class="c"># Allocated 2GB for swap</span>
<span class="nv">$ </span>lvcreate <span class="nt">-l</span> 100%FREE MyVol <span class="nt">-n</span> root			<span class="c"># Allocated remaining for root</span>
<span class="nv">$ </span>mkswap /dev/mapper/MyVol-swap				<span class="c"># Format swap</span>
<span class="nv">$ </span>mkfs.ext4 /dev/mapper/MyVol-root			<span class="c"># Format root</span>
<span class="nv">$ </span>swapon /dev/mapper/MyVol-swap				<span class="c"># Mount swap</span>
<span class="nv">$ </span>mount /dev/mapper/MyVol-root /mnt			<span class="c"># Mount root</span>
<span class="nv">$ </span>mkfs.vfat <span class="nt">-F32</span> /dev/nvme0n1p1				<span class="c"># Format boot</span>
<span class="nv">$ </span><span class="nb">mkdir</span>	/mnt/boot					<span class="c"># Create boot directory</span>
<span class="nv">$ </span>mount /dev/nvme0n1p1 /mnt/boot			<span class="c"># Mount boot</span></code></pre></figure>

<p><a href="#2021-03-22">2021-03-22</a> <a href="#2021-03-22_1">[1]</a></p>

<h4 id="wireless">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>wifi-menu</code></pre></figure>

<p><a href="#2021-03-22">2021-03-22</a> <a href="#2021-03-22_2">[2]</a></p>

<h4 id="install-base-system">Install Base System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacstrap /mnt base base-devel</code></pre></figure>

<p><a href="#2021-03-22">2021-03-22</a> <a href="#2021-03-22_3">[3]</a></p>

<h4 id="configure-system">Configure System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>genfstab <span class="nt">-pU</span> /mnt <span class="o">&gt;&gt;</span> /mnt/etc/fstab	<span class="c"># Generate fstab</span></code></pre></figure>

<p>Edit <em>/mnt/etc/fstab</em> and change <em>relatime</em> to <em>noatime</em> for non-boot partitions.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>arch-chroot /mnt			<span class="c"># chroot</span></code></pre></figure>

<p>Add hostname to <em>/etc/hostname</em> and <em>/etc/hosts</em></p>

<p><em>/etc/hosts</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	localhost
<span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	<span class="nb">hostname</span><span class="p">.</span>subdomain<span class="p">.</span>domain	<span class="nb">hostname</span></code></pre></figure>

<p>Set time zone:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> /usr/share/zoneinfo/Pacific/Auckland /etc/localtime</code></pre></figure>

<p>Uncomment the locale in <em>/etc/locale.gen</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>locale-gen				<span class="c"># Generate locale </span></code></pre></figure>

<p>Set locale preference by adding <em>LANG=”en_NZ.UTF-8”</em> to <em>/etc/locale.conf</em></p>

<h4 id="configure-mkinitcpio">Configure mkinitcpio</h4>

<p>Add <em>ext4</em> to MODULES</p>

<p>Add <em>encrypt lvm2 resume</em> hooks to <em>/etc/mkinitcpio.conf</em> before <em>filesystems</em>
and after <em>udev</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">HOOKS<span class="p">=(</span>base udev autodetect modconf block encrypt lvm2 resume filesystems keyboard fsck<span class="p">)</span></code></pre></figure>

<p>mkinitcpio and set root password:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mkinitcpio <span class="nt">-p</span> linux
<span class="nv">$ </span>passwd</code></pre></figure>

<h4 id="install-boot-loader">Install Boot Loader</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>bootctl <span class="nt">--path</span><span class="o">=</span>/boot <span class="nb">install</span></code></pre></figure>

<p>Edit <em>/boot/loader/loader.conf</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">default arch
<span class="nb">timeout</span> <span class="m">5</span>
editor <span class="m">0</span></code></pre></figure>

<p>Edit <em>/boot/loader/entries/arch.conf</em><br />
Use <em>blkid</em> to find the UUID for <em>/dev/nvme0n1p2</em> and replace the &lt;UUID&gt; below
without the bracket.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="nb">title</span> Arch Linux
linux /vmlinuz<span class="p">-</span>linux
initrd /initramfs<span class="p">-</span>linux<span class="p">.</span>img
<span class="k">options</span> cryptdevice<span class="p">=</span>UUID<span class="p">=&lt;</span>UUID<span class="p">&gt;:</span>MyVol root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root resume=/</span>dev<span class="sr">/mapper/</span>MyVol<span class="p">-</span>swap rw</code></pre></figure>

<h4 id="wireless-1">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> dialog wpa_supplicant</code></pre></figure>

<h4 id="umount-and-reboot">Umount and Reboot</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">exit</span>			<span class="c"># Exit from chroot environment</span>
<span class="nv">$ </span>umount <span class="nt">-R</span> /mnt
<span class="nv">$ </span>reboot</code></pre></figure>

<h4 id="create-new-user">Create New User</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>useradd <span class="nt">-m</span> <span class="nt">-G</span> wheel <span class="nt">-s</span> /bin/bash daniel
<span class="nv">$ </span>passwd daniel
<span class="nv">$ </span>usermod <span class="nt">-a</span> <span class="nt">-G</span> audio,network,power,scanner,storage,systemd-journal,video daniel</code></pre></figure>

<p>The above creates a new user with home directory, change password and add user
to additional groups.</p>

<h4 id="wireless-2">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>wifi-menu
<span class="nv">$ </span><span class="nb">ls</span> /etc/netctl/			<span class="c"># Find the wifi profile</span>
<span class="nv">$ </span>netctl <span class="nb">enable </span>profile-name		<span class="c"># profile-name as obtained above</span></code></pre></figure>

<p>Alternatively, a better approach is as follows rather than enabling profile:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> ifplugd					<span class="c"># Wired</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>netctl-ifplugd@interface.service	<span class="c"># substitute interface with the value obtained from ip a</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>netctl-auto@interface.service		<span class="c"># substitute interface with the value obtained from ip a</span></code></pre></figure>

<p>References:</p>
<p />

<p><a href="https://wiki.archlinux.org/index.php/netctl#Enabling_a_profile">netctl: Enabling a profile</a><br />
<a href="https://wiki.archlinux.org/index.php/netctl#Special_systemd_units">netctl: Special systemd units: wired / wireless</a></p>

<h4 id="sudo">Sudo</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> <span class="nb">sudo</span></code></pre></figure>

<p>Run visudo, edit it to restrict sudo to specific group or user.</p>

<h4 id="additional-install">Additional Install</h4>

<p>Install <em>yay</em> from AUR.</p>

<h4 id="audio">Audio</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> alsa-utils
<span class="nv">$ </span>amixer sset Master unmute		<span class="c"># ALSA comes muted by default.</span></code></pre></figure>

<h4 id="restore">Restore</h4>

<p>Restore home from backup.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> - &lt; pkglist.txt	<span class="c"># Install all packages from backup list</span></code></pre></figure>

<p>Do the same for AUR with <em>yay</em>.<br /></p>

<h3 id="extra-configuration">Extra Configuration</h3>

<h4 id="bluetooth">Bluetooth</h4>

<p>Edit <em>/etc/bluetooth/main.conf</em> and add the following line.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">AutoEnable<span class="p">=</span>true</code></pre></figure>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>bluetooth.service</code></pre></figure>

<p>Enable bluetooth service then pair devices.</p>

<h4 id="pulseaudio">PulseAudio</h4>

<p>Edit <em>/etc/pulse/system.pa</em> and add the following lines.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">load<span class="p">-</span>module module<span class="p">-</span>bluetooth<span class="p">-</span>policy
load<span class="p">-</span>module module<span class="p">-</span>bluetooth<span class="p">-</span>discover</code></pre></figure>

<p>Edit <em>/etc/pulse/default.pa</em> and add the following line.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">load<span class="p">-</span>module module<span class="p">-</span>switch<span class="p">-</span><span class="k">on</span><span class="p">-</span>connect</code></pre></figure>

<p>Run <em>sudo usermod -a -G lp daniel</em> to add to lp group.</p>

<p>If cookie not found then <em>cp ~/.pulse-cookie ~/.config/pulse/cookie</em></p>

<h4 id="cups">CUPS</h4>

<p>Install, enable and start CUPS</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> cups
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>org.cups.cupsd.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl start org.cups.cupsd.service</code></pre></figure>

<p>Run <em>sudo usermod -a -G cups daniel</em> to add to <em>cups</em> group.</p>

<p>Append <em>wheel</em> to <em>SystemGroup sys root</em> in <em>/etc/cups/cups-files.conf</em></p>

<p>At this point, re-logon for the permission to be effective.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>yay <span class="nt">-S</span> brother-mfc-l2713dw
<span class="nv">$ </span>yay <span class="nt">-S</span> brscan4</code></pre></figure>

<p>Install printer and scanner drivers.</p>

<p>Browse to <em>http://localhost:631</em>, go to <em>Administration -&gt; Add Printer</em><br />
Select <em>LPD/LPR Host or Printer</em><br />
Enter <em>lpd://(Your printer’s IP address)/binary_p1</em><br />
Select <em>Brother</em><br />
Select the printer driver, which should already be automatically selected. It’s
the CUPS version.<br />
Name the printer.<br /></p>

<p>Then go to <em>Printers</em>, select the printer, drop down <em>Administration</em> and select <em>Set
Default Options</em>, set <em>A4</em>, <em>Plain Paper</em>, <em>600dpi</em>, <em>Tray1</em>, <em>DuplexNoTumble</em>, <em>Toner Save
to Off</em>. And again drop down <em>Administration</em> and select <em>Set As Server Default</em>.</p>

<p>For scanning:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brsaneconfig4 <span class="nt">-a</span> <span class="nv">name</span><span class="o">=(</span>name your device<span class="o">)</span> <span class="nv">model</span><span class="o">=(</span>model name<span class="o">)</span> <span class="nv">ip</span><span class="o">=</span>xx.xx.xx.xx</code></pre></figure>

<p>Use gscan2pdf:</p>

<p>Untick <em>OCR scanned pages</em><br />
Select <em>All</em> pages<br />
Leave <em>Mode</em> as default<br />
Change <em>Geometry</em> from <em>Manual</em> to <em>A4</em><br /></p>

<p>gscan2pdf will need <em>yay -S pdftk-bin</em></p>

<p>Even though <em>org.cups.cupsd.service</em> has been enabled, it won’t auto start on
boot.<br />
Just do a test print, that will activate the auto start on boot.</p>

<h4 id="ios">iOS</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>usbmuxd <span class="nt">-f</span> <span class="nt">-v</span>
<span class="nv">$ </span>idevice_id <span class="nt">-l</span>
<span class="nv">$ </span>ideviceinfo
<span class="nv">$ </span>ideviceinstaller <span class="nt">-l</span>
<span class="nv">$ </span>ifuse ~/iPhone
<span class="nv">$ </span>umount ~/iPhone</code></pre></figure>

<h4 id="ntp">NTP</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>ntpd.service</code></pre></figure>

<h3 id="additional-install--configuration-for-macbook--laptop-only">Additional Install / Configuration for MacBook / Laptop Only</h3>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>yay <span class="nt">-S</span> powertop thermald cpupower mbpfan-git tlp
<span class="nv">$ </span>powertop <span class="nt">--calibrate</span>
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>powertop.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>cpupower.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>mbpfan.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>tlp.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>tlp-sleep.service</code></pre></figure>

<p>For BCM4360 wireless network adapter, install <em>broadcom-wl-dkms</em> and
<em>linux-headers</em>. Then reboot before trying wifi-menu.</p>

<p>Suspend works out of the box.</p>

<p>References:</p>
<p />

<p><a href="https://wiki.archlinux.org/index.php/Broadcom_wireless">Broadcom wireless</a><br />
<a href="https://wiki.archlinux.org/index.php/Mac#WiFi">WiFi</a><br />
<a href="https://wiki.archlinux.org/index.php/Mac#Suspend_and_Hibernate">Suspend</a><br />
<a href="https://wiki.archlinux.org/index.php/Mac#Mid_2013_13%22_-_Version_6,2">Mid 2013</a></p>

<p><a href="#2021-03-22">2021-03-22</a> <a href="#2021-03-22_4">[4]</a></p>

<h3 id="addendum">Addendum</h3>

<h4 id="2021-03-22"><a name="2021-03-22"></a>2021-03-22</h4>

<h4 id="1-partition"><a name="2021-03-22_1"></a>[1] Partition</h4>

<p>For dual boot, in my case, tested working with Macbook Air.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sda1 EFI /boot <span class="c"># This is Mac's EFI, sharing it with Linux)</span>
sad2 MAC
sda3 EFI       <span class="c"># Left blank</span>
sda4 LUKS
|-MyVol
  |- MyVol-swap <span class="o">[</span>SWAP]
  |- MyVol-root /</code></pre></figure>

<h4 id="2-wireless"><a name="2021-03-22_2"></a>[2] Wireless</h4>

<p>netctl is no longer included by default.
Use ethernet or install netctl package.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> netctl</code></pre></figure>

<h4 id="3-install-base-system"><a name="2021-03-22_3"></a>[3] Install Base System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacstrap /mnt base base-devel linux linux-firmware mkinitcpio lvm2 netctl</code></pre></figure>

<p>linux, linux-firmware, mkinitcpio lvm2 and netctl are no longer included by
default so have to install them explicitly.</p>

<h4 id="4-additional-install--configuration-for-macbook--laptop-only"><a name="2021-03-22_4"></a>[4] Additional Install / Configuration for MacBook / Laptop Only</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>yay <span class="nt">-S</span> powertop laptop-mode-tools cpupower thermald mbpfan-git
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> acpi acpid
<span class="nv">$ </span>powertop <span class="nt">--calibrate</span>
<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/systemd/system/powertop.service

<span class="o">[</span>Unit]
<span class="nv">Description</span><span class="o">=</span>Powertop tunings

<span class="o">[</span>Service]
<span class="nv">Type</span><span class="o">=</span>oneshot
<span class="nv">ExecStart</span><span class="o">=</span>/usr/bin/powertop <span class="nt">--auto-tune</span>

<span class="o">[</span>Install]
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target

<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>powertop.service
<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/laptop-mode/laptop-mode.conf

<span class="nv">ENABLE_LAPTOP_MODE_ON_AC</span><span class="o">=</span>1
<span class="nv">ENABLE_LAPTOP_MODE_WHEN_LID_CLOSED</span><span class="o">=</span>1

<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/laptop-mode/conf.d/cpufreq.conf

<span class="nv">CONTROL_CPU_FREQUENCY</span><span class="o">=</span>0

<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/laptop-mode/conf.d/intel_pstate.conf

<span class="nv">CONTROL_INTEL_PSTATE</span><span class="o">=</span>0

<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>laptop-mode.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>acpid.service
<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/default/cpupower

<span class="nv">governor</span><span class="o">=</span><span class="s1">'powersave'</span>
<span class="nv">max_freq</span><span class="o">=</span><span class="s2">"1.3GHz"</span>

<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>cpupower.service
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>thermald.service
<span class="nv">$ </span><span class="nb">sudo </span>vim /usr/lib/systemd/system/mbpfan.service

<span class="nv">ExecStart</span><span class="o">=</span>/usr/sbin/mbpfan <span class="nt">-f</span>

<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>mbpfan.service
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> broadcom-wl-dkms linux-headers <span class="c"># linux-headers package is not required but installed it anyway</span>
<span class="nv">$ </span><span class="nb">sudo </span>rmmod b43 ssb bcma wl                    <span class="c"># Either this or reboot</span>
<span class="nv">$ </span><span class="nb">sudo </span>modprobe wl</code></pre></figure>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Feb</title><link href="/log/2018/02/01/Feb.html" rel="alternate" type="text/html" title="Feb" /><published>2018-02-01T13:00:00+13:00</published><updated>2018-02-01T13:00:00+13:00</updated><id>/log/2018/02/01/Feb</id><content type="html" xml:base="/log/2018/02/01/Feb.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#icewind-1">Icewind Dale Enhanced Edition</a></li>
</ol>

<h3 id="thu-feb-8-2018">Thu, Feb 8, 2018</h3>

<h3 id="gogs-icewind-dale-enhanced-edition"><a name="icewind-1"></a>GOG’S ICEWIND DALE ENHANCED EDITION</h3>

<h4 id="media">Media</h4>

<p>Native Linux version on 
<a href="https://www.gog.com/game/icewind_dale_enhanced_edition">GOG</a>.</p>

<h4 id="dependencies">Dependencies</h4>

<p>It’s a straight install but to run, it needs the following dependencies as 
listed on their site.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">libc6<span class="p">:</span>i386
libasound2<span class="p">:</span>i386
libasound2<span class="p">-</span>data<span class="p">:</span>i386
libasound2<span class="p">-</span>plugins<span class="p">:</span>i386
libjson<span class="p">-</span>c2<span class="p">:</span>i386
libopenal1<span class="p">:</span>i386
libstdc<span class="p">++</span><span class="m">6</span><span class="p">:</span>i386
libssl1<span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">:</span>i386
libexpat1<span class="p">:</span>i386
libx11<span class="m">-6</span><span class="p">:</span>i386
libxau6<span class="p">:</span>i386
libxcb1<span class="p">:</span>i386
libxcursor1<span class="p">:</span>i386
libxdmcp6<span class="p">:</span>i386
libxext6<span class="p">:</span>i386
libxfixes3<span class="p">:</span>i386
libxinerama1<span class="p">:</span>i386
libxrandr2<span class="p">:</span>i386
libxrender1<span class="p">:</span>i386
libjson0<span class="p">:</span>i386</code></pre></figure>

<p>To install Arch’s 32-bit equivalent, start off by uncommenting the
<a href="https://wiki.archlinux.org/index.php/Multilib">multilib</a> section in 
<em>/etc/pacman.conf</em>.</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="p">[</span>multilib<span class="p">]</span>
Include <span class="p">=</span> <span class="sr">/etc/</span>pacman<span class="p">.</span><span class="k">d</span>/mirrorlist</code></pre></figure>

<p><em>pacman -Sl multilib</em> to list all packages in the multilib repository.</p>

<p><em>pacman -Sl multilib | grep</em> to find the packages required.</p>

<p>Installed files are located under <em>/usr/lib32/</em>.</p>

<p>The packages I’ve ended with are as follows:</p>

<p><em>lib32-alsa-lib</em></p>

<p>Dependencies:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">lib32<span class="p">-</span>glibc</code></pre></figure>

<p><em>lib32-json-glib</em></p>

<p>Dependencies:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">lib32<span class="p">-</span>gcc<span class="p">-</span>libs
lib32<span class="p">-</span>pcre
lib32<span class="p">-</span>libffi
lib32<span class="p">-</span>util<span class="p">-</span>linux
lib32<span class="p">-</span>zlib
lib32<span class="p">-</span>glib2</code></pre></figure>

<p>Link:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="k">cd</span> <span class="sr">/usr/</span>lib32
sudo ln <span class="p">-</span>s libjson<span class="p">-</span>glib<span class="m">-1</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="k">so</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">400</span><span class="p">.</span><span class="m">2</span> libjson<span class="p">.</span><span class="k">so</span><span class="p">.</span><span class="m">0</span></code></pre></figure>

<p><em>lib32-openal</em></p>

<p><em>lib32-mesa</em></p>

<p>Dependencies:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">lib32<span class="p">-</span>libpciaccess
lib32<span class="p">-</span>libdrm
lib32<span class="p">-</span>libxdmcp
lib32<span class="p">-</span>libxau
lib32<span class="p">-</span>libxcb
lib32<span class="p">-</span>libx11
lib32<span class="p">-</span>libxext
lib32<span class="p">-</span>libxxf86vm
lib32<span class="p">-</span>libxfixes
lib32<span class="p">-</span>libxdamage
lib32<span class="p">-</span>libxshmfence
lib32<span class="p">-</span>lm_sensors
lib32<span class="p">-</span>bzip2
lib32<span class="p">-</span>libelf
lib32<span class="p">-</span>ncurses
lib32<span class="p">-</span>llvm<span class="p">-</span>libs
lib32<span class="p">-</span>expat
lib32<span class="p">-</span>readline
lib32<span class="p">-</span>icu
lib32<span class="p">-</span>libxml2
lib32<span class="p">-</span>wayland
lib32<span class="p">-</span>libglvnd</code></pre></figure>

<p><em>lib32-openssl-1.0</em></p>

<p><em>lib32-sdl2</em></p>

<p>Dependencies:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">lib32<span class="p">-</span>libxrender</code></pre></figure>

<p><em>lib32-libpulse</em></p>

<p>Dependencies:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">lib32<span class="p">-</span>attr
lib32<span class="p">-</span>libcap
lib32<span class="p">-</span>libgpg<span class="p">-</span>error
lib32<span class="p">-</span>libgcrypt
lib32<span class="p">-</span>xz
lib32<span class="p">-</span>systemd
lib32<span class="p">-</span>dbus
lib32<span class="p">-</span>libasyncns
lib32<span class="p">-</span>libxi
lib32<span class="p">-</span>libxtst
lib32<span class="p">-</span>libice
lib32<span class="p">-</span>libsm
lib32<span class="p">-</span>libogg
lib32<span class="p">-</span>flac
lib32<span class="p">-</span>libvorbis
lib32<span class="p">-</span>libsndfile</code></pre></figure>

<p><em>lib32-libxrandr</em></p>

<p><em>lib32-libxinerama</em></p>

<p><em>lib32-libxfixes</em></p>

<p><em>lib32-libxcursor</em></p>

<p><em>lib32-libstdc++5</em></p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Jan</title><link href="/log/2018/01/01/Jan.html" rel="alternate" type="text/html" title="Jan" /><published>2018-01-01T13:00:00+13:00</published><updated>2018-01-01T13:00:00+13:00</updated><id>/log/2018/01/01/Jan</id><content type="html" xml:base="/log/2018/01/01/Jan.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#arch-1">Arch Installation / Encrypted Setup / Syslinux</a></li>
  <li><a href="#fat32-1">FAT32</a></li>
</ol>

<h3 id="wed-jan-24-2018">Wed, Jan 24, 2018</h3>

<h3 id="arch-installation--encrypted-setup--syslinux"><a name="arch-1"></a>ARCH INSTALLATION / ENCRYPTED SETUP / Syslinux</h3>

<p>This is <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS">LVM on LUKS</a> setup based on Arch’s wiki documentation.</p>

<h4 id="keyboard">Keyboard</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>loadkeys us</code></pre></figure>

<h4 id="partition">Partition</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>lsblk				<span class="c"># List block devices</span>
<span class="nv">$ </span>gdisk /dev/sda		<span class="c"># To partition /dev/sda</span>
<span class="nv">$ </span>o				<span class="c"># Either new or start over</span>
<span class="nv">$ </span>y				<span class="c"># Accept</span>
<span class="nv">$ </span>n				<span class="c"># Create new partition</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>+512M				<span class="c"># Allocated 512MB for boot partition</span>
<span class="nv">$ </span>8300				<span class="c"># Set type of partition or L to list</span>
<span class="nv">$ </span>n				<span class="c"># Create new partition</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default partition number</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default first sector</span>
<span class="nv">$ </span>Enter				<span class="c"># Accept default last sector</span>
<span class="nv">$ </span>8E00				<span class="c"># Set partition type to LVM</span>
<span class="nv">$ </span>w				<span class="c"># Write change</span>
<span class="nv">$ </span>y				<span class="c"># Accept</span>
<span class="nv">$ </span>cryptsetup luksFormat <span class="nt">--type</span> luks2 /dev/sda2	<span class="c"># Create encrypted container</span>
<span class="nv">$ </span>cryptsetup open /dev/sda2 cryptolvm		<span class="c"># Open container</span>
<span class="nv">$ </span>pvcreate /dev/mapper/cryptolvm		<span class="c"># Create physical volume</span>
<span class="nv">$ </span>vgcreate MyVol /dev/mapper/cryptolvm		<span class="c"># Create MyVol volume group</span>
<span class="nv">$ </span>lvcreate <span class="nt">-L</span> 60G MyVol <span class="nt">-n</span> home			<span class="c"># Allocated 1/5 space for home</span>
<span class="nv">$ </span>lvcreate <span class="nt">-L</span> 8G MyVol <span class="nt">-n</span> swap			<span class="c"># Allocated 2xRAM for swap</span>
<span class="nv">$ </span>lvcreate <span class="nt">-l</span> 100%FREE MyVol <span class="nt">-n</span> root		<span class="c"># Allocated remaining for root</span>
<span class="nv">$ </span>mkfs.ext4 /dev/mapper/MyVol-home		<span class="c"># Format home</span>
<span class="nv">$ </span>mkswap /dev/mapper/MyVol-swap			<span class="c"># Format swap</span>
<span class="nv">$ </span>mkfs.ext4 /dev/mapper/MyVol-root		<span class="c"># Format root</span>
<span class="nv">$ </span>swapon /dev/mapper/MyVol-swap			<span class="c"># Mount swap</span>
<span class="nv">$ </span>mount /dev/mapper/MyVol-root /mnt		<span class="c"># Mount root</span>
<span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-pv</span> /mnt/home				<span class="c"># Create home directory</span>
<span class="nv">$ </span>mount /dev/mapper/MyVol-home /mnt/home	<span class="c"># Mount home</span>
<span class="nv">$ </span>mkfs.ext2 /dev/sda1				<span class="c"># Create Ext2</span>
<span class="nv">$ </span><span class="nb">mkdir</span>	/mnt/boot				<span class="c"># Create boot directory</span>
<span class="nv">$ </span>mount /dev/sda1 /mnt/boot			<span class="c"># Mount boot</span></code></pre></figure>

<h4 id="wireless">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>wifi-menu</code></pre></figure>

<h4 id="install-base-system">Install Base System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacstrap /mnt base</code></pre></figure>

<h4 id="configure-system">Configure System</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>genfstab <span class="nt">-p</span> /mnt <span class="o">&gt;&gt;</span> /mnt/etc/fstab	<span class="c"># Generate fstab</span>
<span class="nv">$ </span>arch-chroot /mnt			<span class="c"># chroot</span></code></pre></figure>

<p>Add hostname to <em>/etc/hostname</em> and <em>/etc/hosts</em></p>

<p><em>/etc/hosts</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	localhost
<span class="m">127</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">0</span><span class="p">.</span><span class="m">1</span>	<span class="nb">hostname</span><span class="p">.</span>subdomain<span class="p">.</span>domain	<span class="nb">hostname</span></code></pre></figure>

<p>Set time zone:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> /usr/share/zoneinfo/Pacific/Auckland /etc/localtime</code></pre></figure>

<p>Uncomment the locale in <em>/etc/locale.gen</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>locale-gen				<span class="c"># Generate locale </span></code></pre></figure>

<p>Set locale preference by adding <em>LANG=”en_NZ.UTF-8”</em> to <em>/etc/locale.conf</em></p>

<h4 id="configure-mkinitcpio">Configure mkinitcpio</h4>

<p>Add <em>keyboard, encrypt</em> and <em>lvm2</em> hooks to <em>/etc/mkinitcpio.conf</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">HOOKS<span class="p">=(...</span> keyboard encrypt lvm2 fsck<span class="p">)</span></code></pre></figure>

<p>mkinitcpio and set root password:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mkinitcpio <span class="nt">-p</span> linux
<span class="nv">$ </span>passwd</code></pre></figure>

<h4 id="install-boot-loader">Install Boot Loader</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> gdisk			<span class="c"># Prerequisite</span>
<span class="nv">$ </span>pacman <span class="nt">-S</span> syslinux
<span class="nv">$ </span>syslinux-install_update <span class="nt">-i</span> <span class="nt">-a</span> <span class="nt">-m</span></code></pre></figure>

<p><em>/boot/syslinux/syslinux.cfg</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">LABEL arch
    MENU LABEL Arch Linux
    LINUX <span class="p">..</span>/vmlinuz<span class="p">-</span>linux
    APPEND root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root cryptdevice=/</span>dev/sda2<span class="p">:</span>cryptolvm rw
    INITRD <span class="p">..</span>/initramfs<span class="p">-</span>linux<span class="p">.</span>img

LABEL archfallback
    MENU LABEL Arch Linux Fallback
    LINUX <span class="p">..</span>/vmlinuz<span class="p">-</span>linux
    APPEND root<span class="p">=</span><span class="sr">/dev/</span>mapper<span class="sr">/MyVol-root cryptdevice=/</span>dev/sda2<span class="p">:</span>cryptolvm rw
    INITRD <span class="p">..</span>/initramfs<span class="p">-</span>linux<span class="p">-</span>fallback<span class="p">.</span>img</code></pre></figure>

<p><em>/etc/crypttab</em></p>

<p>Append line:</p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">cryptolvm	<span class="sr">/dev/</span>sda2</code></pre></figure>

<p>Create <em>crypttab.initramfs</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">cp</span> /etc/crypttab /etc/crypttab.initramfs</code></pre></figure>

<h4 id="wireless-1">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> dialog wpa_supplicant</code></pre></figure>

<h4 id="umount-and-reboot">Umount and Reboot</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">exit</span>			<span class="c"># Exit from chroot environment</span>
<span class="nv">$ </span>umount <span class="nt">-R</span> /mnt
<span class="nv">$ </span>reboot</code></pre></figure>

<h4 id="create-new-user">Create New User</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>useradd <span class="nt">-m</span> <span class="nt">-G</span> wheel <span class="nt">-s</span> /bin/bash daniel
<span class="nv">$ </span>passwd daniel
<span class="nv">$ </span>usermod <span class="nt">-a</span> <span class="nt">-G</span> audio,network,power,scanner,storage,systemd-journal,video daniel</code></pre></figure>

<p>The above creates a new user with home directory, change password and add user
to additional groups.</p>

<h4 id="wireless-2">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>wifi-menu
<span class="nv">$ </span><span class="nb">ls</span> /etc/netctl/			<span class="c"># Find the wifi profile</span>
<span class="nv">$ </span>netctl <span class="nb">enable </span>profile-name		<span class="c"># profile-name as obtained above</span></code></pre></figure>

<h4 id="sudo">Sudo</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> <span class="nb">sudo</span></code></pre></figure>

<p>Run visudo, edit it to restrict sudo to specific group or user.</p>

<h4 id="additional-install">Additional Install</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> openssh
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>sshd.service
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> <span class="nt">--needed</span> base-devel
<span class="nv">$ </span>wget <span class="nt">-c</span> https://aur.archlinux.org/cgit/aur.git/snapshot/cower.tar.gz
<span class="nv">$ </span><span class="nb">tar </span>xzvf cower.tar.gz
<span class="nv">$ </span><span class="nb">cd </span>cower
<span class="nv">$ </span>makepkg <span class="nt">-s</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-U</span> cower-&lt;version&gt;.pkg.tar.xz
<span class="nv">$ </span>wget <span class="nt">-c</span> https://aur.archlinux.org/cgit/aur.git/snapshot/pacaur.tar.gz
<span class="nv">$ </span><span class="nb">tar </span>xzvf pacaur.tar.gz
<span class="nv">$ </span><span class="nb">cd </span>pacaur
<span class="nv">$ </span>makepkg <span class="nt">-s</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-U</span> pacaur-&lt;version&gt;.pkg.tar.xz</code></pre></figure>

<h4 id="audio">Audio</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> alsa-utils
<span class="nv">$ </span>amixer sset Master unmute		<span class="c"># ALSA comes muted by default.</span></code></pre></figure>

<h4 id="restore">Restore</h4>

<p>Restore home from backup.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> - &lt; pkglist.txt	<span class="c"># Install all packages from backup list</span></code></pre></figure>

<p>Do the same for AUR with pacaur.<br />
<br /></p>
<h3 id="fri-jan-26-2018">Fri, Jan 26, 2018</h3>

<h3 id="fat32"><a name="fat32-1"></a>FAT32</h3>

<p>gparted or via command line.</p>

<p>Either way, install dosfstools.<br />
I’m using FAT32 (LBA), which is also the factory default for USB stick.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>lsblk
<span class="nv">$ </span><span class="nb">sudo </span>fdisk /dev/sdb
<span class="nv">$ </span>o
<span class="nv">$ </span>n
<span class="nv">$ </span>p
<span class="nv">$ </span>Enter
<span class="nv">$ </span>Enter
<span class="nv">$ </span>Enter
<span class="nv">$ </span>t
<span class="nv">$ </span>c
<span class="nv">$ </span>w
<span class="nv">$ </span><span class="nb">sudo </span>mkfs.vfat /dev/sdb1 <span class="nt">-n</span> DN-U-001
<span class="nv">$ </span><span class="nb">sudo </span>mount <span class="nt">-o</span> <span class="nv">gid</span><span class="o">=</span>storage,fmask<span class="o">=</span>113,dmask<span class="o">=</span>002 /dev/sdb1 /mnt/usbstick
<span class="nv">$ </span><span class="nb">sudo </span>umount /mnt/usbstick</code></pre></figure>

<p>Alternatively:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>mount <span class="nt">-o</span> <span class="nv">uid</span><span class="o">=</span>daniel /dev/sdb1 /mnt/usbstick</code></pre></figure>

<p>References:</p>
<p />

<p><a href="http://www.dewassoc.com/kbase/hard_drives/lba.htm">LBA</a><br />
<a href="https://wiki.archlinux.org/index.php/USB_storage_devices#Mounting_USB_memory">Mounting USB stick with write access</a></p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Feb</title><link href="/log/2017/02/01/Feb.html" rel="alternate" type="text/html" title="Feb" /><published>2017-02-01T13:00:00+13:00</published><updated>2017-02-01T13:00:00+13:00</updated><id>/log/2017/02/01/Feb</id><content type="html" xml:base="/log/2017/02/01/Feb.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#raspberry-1">Raspberry Pi</a></li>
</ol>

<h3 id="fri-feb-02-2017">Fri, Feb 02, 2017</h3>

<h3 id="raspberry-pi"><a name="raspberry-1"></a>RASPBERRY PI</h3>

<h4 id="backup">Backup</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="k">if</span><span class="o">=</span>/dev/sde <span class="nv">of</span><span class="o">=</span>raspbian.img    <span class="c"># backup</span>
<span class="nv">$ </span><span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="k">if</span><span class="o">=</span>raspbian.img <span class="nv">of</span><span class="o">=</span>/dev/sde    <span class="c"># restore</span></code></pre></figure>

<p>or</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="k">if</span><span class="o">=</span>/dev/sde | <span class="nb">gzip</span> <span class="o">&gt;</span> rasbian.img.gz             <span class="c"># backup</span>
<span class="nv">$ </span><span class="nb">gunzip</span> <span class="nt">--stdout</span> rasbian.img.gz | <span class="nb">sudo dd </span><span class="nv">bs</span><span class="o">=</span>4M <span class="nv">of</span><span class="o">=</span>/dev/sde    <span class="c"># restore</span></code></pre></figure>

<p>Reference:
<a href="https://www.raspberrypi.org/documentation/linux/filesystem/backup.md">Backups</a></p>

<h4 id="media">Media</h4>

<p>ISO available via Arch 
<a href="http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-2-latest.tar.gz">download</a> 
page.</p>

<h4 id="installation">Installation</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>fdisk /dev/sde
<span class="nv">$ </span>o                      <span class="c"># Clear out any partitions on the drive</span>
<span class="nv">$ </span>p                      <span class="c"># List partitions</span>
<span class="nv">$ </span>n                      <span class="c"># New partition</span>
<span class="nv">$ </span>p                      <span class="c"># Primary</span>
<span class="nv">$ </span>1                      <span class="c"># First partition on drive</span>
<span class="nv">$ </span>Enter                  <span class="c"># Accept default first sector</span>
<span class="nv">$ </span>+100M                  <span class="c"># 100MB for boot partition</span>
<span class="nv">$ </span>t                      <span class="c"># Partition type</span>
<span class="nv">$ </span>c                      <span class="c"># Set partition type to W95 FAT32 (LBA)</span>
<span class="nv">$ </span>n                      <span class="c"># New partition</span>
<span class="nv">$ </span>p                      <span class="c"># Primary</span>
<span class="nv">$ </span>2                      <span class="c"># Second partition on drive</span>
<span class="nv">$ </span>Enter                  <span class="c"># Accept default first sector</span>
<span class="nv">$ </span>Enter                  <span class="c"># Accept default last sector</span>
<span class="nv">$ </span>mkfs.vfat /dev/sde1    <span class="c"># Create and mount the FAT filesystem</span>
<span class="nv">$ </span><span class="nb">mkdir </span>boot
<span class="nv">$ </span>mount /dev/sde1 boot
<span class="nv">$ </span>mkfs.ext4 /dev/sde2    <span class="c"># Create and mount the ext4 filesystem</span>
<span class="nv">$ </span><span class="nb">mkdir </span>root
<span class="nv">$ </span>mount /dev/sde2 root
<span class="nv">$ </span>wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-2-latest.tar.gz
<span class="nv">$ </span>bsdtar <span class="nt">-xpf</span> ArchLinuxARM-rpi-2-latest.tar.gz <span class="nt">-C</span> root
<span class="nv">$ </span><span class="nb">sync</span>
<span class="nv">$ </span><span class="nb">mv </span>root/boot/<span class="k">*</span> boot    <span class="c"># Move boot files to the first partition</span>
<span class="nv">$ </span>umount boot root       <span class="c"># Unmount the two partitions</span></code></pre></figure>

<h4 id="default">Default</h4>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">user<span class="p">:</span> alarm
password<span class="p">:</span> alarm

user<span class="p">:</span> root
password<span class="p">:</span> root</code></pre></figure>

<p>Reference: <a href="https://goo.gl/63Gkry">ARMv7 Installation</a></p>

<h4 id="wireless">Wireless</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> dialog wpa_supplicant
<span class="nv">$ </span>wifi-menu
<span class="nv">$ </span><span class="nb">ls</span> /etc/netctl/               <span class="c"># Find the wifi profile</span>
<span class="nv">$ </span>netctl <span class="nb">enable </span>profile-name    <span class="c"># Substitute profile-name as obtained above</span></code></pre></figure>

<h4 id="create-new-user">Create New User</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>useradd <span class="nt">-m</span> <span class="nt">-G</span> wheel <span class="nt">-s</span> /bin/bash daniel
<span class="nv">$ </span>passwd daniel
<span class="nv">$ </span>usermod <span class="nt">-a</span> <span class="nt">-G</span> audio,network,power,scanner,storage,systemd-journal,video daniel</code></pre></figure>

<p>The above creates a new user with home directory, change password and add user
to additional groups.</p>

<h4 id="sudo">Sudo</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pacman <span class="nt">-S</span> <span class="nb">sudo</span></code></pre></figure>

<p>Run visudo, edit it to restrict sudo to specific group or user.</p>

<h4 id="update">Update</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-Syu</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-Syy</span>              <span class="c"># If above failed</span></code></pre></figure>

<h4 id="xfce">Xfce</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xfce4
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xorg-server xorg-server-utils xorg-xinit
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> xf86-video-fbdev
<span class="nv">$ </span>startxfce4                    <span class="c"># NOTE: To manually start Xfce</span></code></pre></figure>

<p><strong>Updated</strong></p>

<p>xorg-server-utils has been replaced by xorg-apps</p>

<h4 id="additional-install">Additional Install</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> openssh
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> vim
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> tigervnc</code></pre></figure>

<p>Apply dotfiles.</p>

<h4 id="vnc-setup">VNC Setup</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vncserver                     <span class="c"># Create configs</span>
<span class="nv">$ </span>vncserver <span class="nt">-kill</span> :1            <span class="c"># NOTE: To shutdown vncserver</span></code></pre></figure>

<p><em>~/.vnc/xstartup</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">#<span class="p">!</span><span class="sr">/bin/</span><span class="k">sh</span>

exec <span class="sr">/bin/</span><span class="k">sh</span> <span class="sr">/etc/</span>xdg<span class="sr">/xfce4/</span>xinitrc</code></pre></figure>

<p><em>/etc/systemd/system/vncserver@:1.service</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"><span class="p">[</span>Unit<span class="p">]</span>
Description<span class="p">=</span>Remote desktop service <span class="p">(</span>VNC<span class="p">)</span>
After<span class="p">=</span>syslog<span class="p">.</span>target network<span class="p">.</span>target

<span class="p">[</span>Service<span class="p">]</span>
Type<span class="p">=</span>simple
<span class="nb">User</span><span class="p">=</span>daniel
PAMName<span class="p">=</span>login
PIDFile<span class="p">=</span><span class="sr">/home/</span>daniel<span class="sr">/.vnc/</span>%H<span class="p">:</span>%<span class="k">i</span><span class="p">.</span>pid
ExecStartPre<span class="p">=</span><span class="sr">/bin/</span><span class="k">sh</span> <span class="p">-</span><span class="k">c</span> <span class="s1">'/usr/bin/vncserver -kill %i &gt; /dev/null 2&gt;&amp;1 || :'</span>
ExecStart<span class="p">=</span><span class="sr">/usr/</span><span class="nb">bin</span>/vncserver <span class="p">-</span>geometry <span class="m">1280</span>x720 <span class="p">-</span>alwaysshared <span class="p">-</span>fg %<span class="k">i</span>
ExecStop<span class="p">=</span><span class="sr">/usr/</span><span class="nb">bin</span>/vncserver <span class="p">-</span>kill %<span class="k">i</span>

<span class="p">[</span>Install<span class="p">]</span>
WantedBy<span class="p">=</span>multi<span class="p">-</span>user<span class="p">.</span>target</code></pre></figure>

<p>Enable <em>vncserver@:1.service</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>vncserver@:1.service</code></pre></figure>

<h4 id="vnc-client">VNC Client</h4>

<p>Use <a href="http://www.tightvnc.com/download.php">TightVNC</a><br />
Port: 5901</p>

<h4 id="mount-usb-drive">Mount USB Drive</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>mount /dev/sda1 /mnt/usb <span class="nt">-o</span> <span class="nv">uid</span><span class="o">=</span>1000,gid<span class="o">=</span>1000,utf8,dmask<span class="o">=</span>027,fmask<span class="o">=</span>137</code></pre></figure>

<h4 id="sshfs">sshfs</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brew cask <span class="nb">install </span>osxfuse
<span class="nv">$ </span>brew <span class="nb">install </span>sshfs</code></pre></figure>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">May</title><link href="/log/2016/05/01/May.html" rel="alternate" type="text/html" title="May" /><published>2016-05-01T12:00:00+12:00</published><updated>2016-05-01T12:00:00+12:00</updated><id>/log/2016/05/01/May</id><content type="html" xml:base="/log/2016/05/01/May.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#plex-1">Plex</a></li>
</ol>

<h3 id="sat-may-14-2016">Sat, May 14, 2016</h3>

<h3 id="plex"><a name="plex-1"></a>PLEX</h3>

<h4 id="plex-media-server">Plex Media Server</h4>

<p><a href="https://aur.archlinux.org/packages/prelink/">prelink</a> from AUR.<br />
<a href="https://aur.archlinux.org/packages/plex-media-server/">plex-media-server</a>
from AUR.</p>

<h4 id="configuration">Configuration</h4>

<p>Set a maximum amount of memory:</p>

<p><em>/usr/lib/systemd/system/plexmediaserver.service</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">MemoryLimit<span class="p">=</span><span class="m">2</span>G</code></pre></figure>

<p><em>iptables</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>iptables <span class="nt">-A</span> INPUT <span class="nt">-p</span> tcp <span class="nt">-m</span> multiport <span class="nt">--dports</span> 32400,32469 <span class="nt">-j</span> ACCEPT
<span class="nv">$ </span>iptables <span class="nt">-A</span> INPUT <span class="nt">-p</span> udp <span class="nt">-m</span> multiport <span class="nt">--dports</span> <span class="se">\</span>
<span class="o">&gt;</span> 1900,32410,32412,32413,32414 <span class="nt">-j</span> ACCEPT
<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>plexmediaserver.service</code></pre></figure>

<h4 id="storage">Storage</h4>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo mkdir</span> /shares
<span class="nv">$ </span><span class="nb">df</span> <span class="nt">-h</span>
<span class="nv">$ </span><span class="nb">sudo </span>blkid /dev/sdb1</code></pre></figure>

<p><em>/etc/fstab</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"># UUID<span class="p">=</span><span class="m">1</span>f22599a<span class="m">-6</span>b0f<span class="m">-4</span>b90<span class="m">-81</span>b0<span class="m">-4</span>c471f761f47
<span class="sr">/dev/</span>sdb1    /shares    ext4    rw<span class="p">,</span>relatime<span class="p">,</span>data<span class="p">=</span>ordered    <span class="m">0</span> <span class="m">3</span></code></pre></figure>

<p>Reboot</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">cd</span> /shares
<span class="nv">$ </span><span class="nb">mkdir </span>plex
<span class="nv">$ </span><span class="nb">sudo chgrp </span>plex plex
<span class="nv">$ </span><span class="nb">sudo chmod </span>g+w,o-rx plex
<span class="nv">$ </span><span class="nb">sudo </span>usermod <span class="nt">-a</span> <span class="nt">-G</span> plex daniel</code></pre></figure>

<p>Reference: <a href="https://wiki.archlinux.org/index.php/Plex">Plex</a></p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">Nov</title><link href="/log/2015/11/01/Nov.html" rel="alternate" type="text/html" title="Nov" /><published>2015-11-01T13:00:00+13:00</published><updated>2015-11-01T13:00:00+13:00</updated><id>/log/2015/11/01/Nov</id><content type="html" xml:base="/log/2015/11/01/Nov.html"><![CDATA[<p><strong>Contents</strong></p>

<ol>
  <li><a href="#octopress-1">Octopress</a></li>
  <li><a href="#i3-1">i3</a></li>
</ol>

<h3 id="mon-nov-02-2015">Mon, Nov 02, 2015</h3>

<h3 id="octopress"><a name="octopress-1"></a>OCTOPRESS</h3>

<p>General maintenance related tasks:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rvm get stable                 <span class="c"># RVM</span>
<span class="nv">$ </span>rvm <span class="nb">install </span>2.2.3              <span class="c"># Ruby</span>
<span class="nv">$ </span>rvm <span class="nt">--default</span> use 2.2.3        <span class="c"># Set default version</span>
<span class="nv">$ </span>rvm rubygems latest            <span class="c"># RubyGems</span>
<span class="nv">$ </span>gem <span class="nb">install </span>bundler            <span class="c"># Dependencies</span>
<span class="nv">$ </span>bundle <span class="nb">install</span>                 <span class="c"># Run within blog directory</span>
<span class="nv">$ </span>rvm <span class="nt">-v</span>                         <span class="c"># Check versions</span>
<span class="nv">$ </span>ruby <span class="nt">-v</span>
<span class="nv">$ </span>which ruby
<span class="nv">$ </span>gem <span class="nt">-v</span>
<span class="nv">$ </span>which gem</code></pre></figure>

<p>Arch uses Python version 3, whereas Octopress requires verions 2. Edit the 
first line of mentos.py to the following instead:</p>

<p><em>~/.rvm/gems/ruby-2.2.3/gems/pygments.rb-0.3.4/lib/pygments/mentos.py</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim">#<span class="p">!</span><span class="sr">/usr/</span><span class="nb">bin</span>/env python2</code></pre></figure>

<p>Migrating to another computer:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>curl <span class="nt">-L</span> https://get.rvm.io | bash <span class="nt">-s</span> stable <span class="nt">--ruby</span></code></pre></figure>

<p>Then do the upgrades as listed above.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git clone <span class="nt">-b</span> <span class="nb">source </span>git@github.com:username/username.github.io.git
<span class="nv">$ </span><span class="nb">cd </span>username.github.io.git
<span class="nv">$ </span>git clone git@github.com:username/username.github.io.git _deploy</code></pre></figure>

<p>Install the dependencies as listed above.</p>

<p>To maintain the blog on multiple computers:</p>

<p>Push on one:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>rake generate
<span class="nv">$ </span>rake deploy
<span class="nv">$ </span>git add <span class="nb">.</span>
<span class="nv">$ </span>git commit <span class="nt">-a</span>
<span class="nv">$ </span>git push origin <span class="nb">source</span></code></pre></figure>

<p>Pull on the other:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git pull origin <span class="nb">source</span>
<span class="nv">$ </span><span class="nb">cd</span> ./_deploy
<span class="nv">$ </span>git pull origin master</code></pre></figure>

<p><br /></p>
<h3 id="i3"><a name="i3-1"></a>I3</h3>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> i3
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> dmenu
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> feh                     <span class="c"># for wallpaper</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> scrot                   <span class="c"># for screenshot</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> mplayer
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> archey3
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> cmus
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> gpicview
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> firefox                 <span class="c"># optional</span>
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> dnsutils
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> whois
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> imagemagick
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> easytag
<span class="nv">$ </span><span class="nb">sudo </span>pacman <span class="nt">-S</span> rdesktop freerdp        <span class="c"># optional</span></code></pre></figure>

<p><em>~/.config/i3/config</em></p>

<figure class="highlight"><pre><code class="language-vim" data-lang="vim"># Pulse Audio controls
bindsym XF86AudioRaiseVolume exec <span class="p">--</span>no<span class="p">-</span>startup<span class="p">-</span>id pactl <span class="k">set</span><span class="p">-</span>sink<span class="p">-</span>volume <span class="m">0</span> <span class="p">+</span><span class="m">5</span>% #increase sound volume
bindsym XF86AudioLowerVolume exec <span class="p">--</span>no<span class="p">-</span>startup<span class="p">-</span>id pactl <span class="k">set</span><span class="p">-</span>sink<span class="p">-</span>volume <span class="m">0</span> <span class="m">-5</span>% #decrease sound volume
bindsym XF86AudioMute exec <span class="p">--</span>no<span class="p">-</span>startup<span class="p">-</span>id pactl <span class="k">set</span><span class="p">-</span>sink<span class="p">-</span>mute <span class="m">0</span> toggle #mute sound

# pause <span class="sr">/ play /</span> <span class="k">next</span> / <span class="k">previous</span>
bindsym XF86AudioPlay exec cmus<span class="p">-</span>remote <span class="p">-</span>C <span class="s2">"player-pause"</span>
bindsym XF86AudioNext exec cmus<span class="p">-</span>remote <span class="p">-</span><span class="k">n</span>
bindsym XF86AudioPrev exec cmus<span class="p">-</span>remote <span class="p">-</span><span class="k">r</span>

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight <span class="p">-</span><span class="nb">inc</span> <span class="m">20</span> #increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight <span class="p">-</span>dec <span class="m">20</span> #decrease screen brightness

exec <span class="p">--</span>no<span class="p">-</span>startup<span class="p">-</span>id feh <span class="p">--</span>recursive <span class="p">--</span>randomize <span class="p">--</span><span class="nb">bg</span><span class="p">-</span><span class="k">center</span> <span class="p">~</span><span class="sr">/Pictures/</span>wallpaper</code></pre></figure>

<p>Optional: <a href="https://aur.archlinux.org/packages/jre7/">JRE</a></p>

<p>Run <em>/usr/lib/jvm/java-7-jre/jre/bin/ControlPanel</em> to configure.</p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Contents]]></summary></entry></feed>